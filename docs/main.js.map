{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/work/work.component.ts","./src/app/components/work/work.component.html","./src/app/enums/languages.enum.ts","./src/app/enums/url.enum.ts","./src/app/mocks/repos.mock.ts","./src/app/services/github.service.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  // {\r\n  //   path: 'home',\r\n  //   component: HomeComponent\r\n  // },\r\n  // {\r\n  //   path: 'work',\r\n  //   component: WorkComponent\r\n  // },\r\n  // {\r\n  //   path: 'contact',\r\n  //   component: ContactComponent\r\n  // },\r\n  // {\r\n  //   path: '**',\r\n  //   redirectTo: 'home'\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent { }\r\n","<app-nav></app-nav>\r\n<div class=\"flex\">\r\n  <app-home></app-home>\r\n  <app-work></app-work>\r\n  <app-contact></app-contact>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NavComponent } from './shared/nav/nav.component';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { WorkComponent } from './components/work/work.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NavComponent, HomeComponent, WorkComponent, ContactComponent],\r\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent { }\r\n","<section id=\"contact\" class=\"flex flex-center vhw-100 contact-bg\">\r\n  <div>\r\n    <q>Want to get in touch?</q>\r\n    <div class=\"flex flex-between mt-20\">\r\n      <a href=\"https://github.com/motheblackcat\" target=\"_blank\"><i class=\"fab fa-3x fa-github\"></i></a>\r\n      <a href=\"https://www.linkedin.com/in/morad-elhamdouni/\" target=\"_blank\"><i class=\"fab fa-3x fa-linkedin\"></i></a>\r\n      <a href=\"mailto:morad.elhamdouni@gmail.com\"><i class=\"fas fa-3x fa-envelope\"></i></a>\r\n    </div>\r\n  </div>\r\n</section>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent { }\r\n","<section id=\"home\" class=\"flex flex-center vhw-100 home-bg\">\r\n  <q class=\"flex flex-center\">Hey there I'm Morad, a web developer that mainly uses (but not only)\r\n    <a href=\"https://angular.io/\" class=\"angular\" target=\"_blank\"><i class=\"fab fa-angular fa-2x\"></i></a>\r\n  </q>\r\n</section>","import { Observable, of } from 'rxjs';\r\nimport { Repo } from 'src/app/interfaces/repo.interface';\r\nimport { GithubService } from 'src/app/services/github.service';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { repos } from 'src/app/mocks/repos.mock';\r\nimport { LANGUAGES } from 'src/app/enums/languages.enum';\r\n\r\n@Component({\r\n  selector: 'app-work',\r\n  templateUrl: './work.component.html',\r\n  styleUrls: ['./work.component.scss']\r\n})\r\nexport class WorkComponent implements OnInit {\r\n  zen$: Observable<string> | undefined;\r\n  repos$: Observable<Repo[]> | undefined = of(repos);\r\n\r\n  constructor(private gs: GithubService) { }\r\n\r\n  // TODO: Test API requests overload prevention\r\n  // TODO: Re-add Github Zen\r\n  ngOnInit() {\r\n    // this.zen$ = this.gs.getZen();\r\n    this.repos$ = this.gs.getRepos();\r\n  }\r\n\r\n  getDotColor(language: string): string {\r\n    switch (language) {\r\n      case LANGUAGES.TYPESCRIPT:\r\n        return '#287dc6';\r\n\r\n      case LANGUAGES.JAVASCRIPT:\r\n        return 'yellow';\r\n\r\n      case LANGUAGES.CSHARP:\r\n        return '#651471';\r\n\r\n      default:\r\n        return 'gray';\r\n    }\r\n  }\r\n}\r\n","<section id=\"work\" class=\"flex flex-center vhw-100 work-bg\">\r\n  <div id=\"container\">\r\n    <div class=\"flex flex-wrap flex-justify-center\">\r\n      <a *ngFor=\"let repo of repos$ | async\" class=\"repo-block\" [href]=\"repo.html_url\" target=\"_blank\">\r\n        <p>{{ repo.name }}</p>\r\n        <p>{{ repo.description }}</p>\r\n        <div class=\"flex flex-between\">\r\n          <p class=\"flex\">\r\n            <i class=\"color-dot\" [style.background-color]=\"getDotColor(repo.language)\"></i>\r\n            <em>{{ repo.language }}</em>\r\n          </p>\r\n          <div>\r\n            <label *ngFor=\"let topic of repo.topics\">{{ topic }}</label>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n\r\n    <!-- <q class=\"text-end\" *ngIf=\"zen$ | async as zen; else noZen\">{{ zen }} - Github Zen</q>\r\n    <ng-template #noZen>\r\n      <q class=\"flex flex-center\">Oh the Github API seems to be down, however you can go there\r\n        <a href=\"https://github.com/motheblackcat\" target=\"_blank\"><i class=\"fab fa-2x fa-github\"></i></a>\r\n        to check my work.</q>\r\n    </ng-template> -->\r\n  </div>\r\n</section>","export enum LANGUAGES {\r\n    TYPESCRIPT = 'TypeScript',\r\n    JAVASCRIPT = 'JavaScript',\r\n    CSHARP = 'C#'\r\n};","export enum URLS {\r\n  BASE = 'https://api.github.com/',\r\n  ZEN = 'zen',\r\n  REPOS = 'users/motheblackcat/repos'\r\n}","import { Repo } from '../interfaces/repo.interface';\r\n\r\nexport const repos: Repo[] = [\r\n  {\r\n    name: 'vue-test',\r\n    description: 'A coding test on Vue.',\r\n    language: 'Vue',\r\n    html_url: 'https://google.com',\r\n    topics: ['vue']\r\n  },\r\n  {\r\n    name: 'lk',\r\n    description: 'The test on unity you know',\r\n    language: 'Unity',\r\n    html_url: 'https://google.com',\r\n    topics: []\r\n  },\r\n  {\r\n    name: 'NgPowa',\r\n    description: 'The best frontend framework ever!',\r\n    language: 'Vue',\r\n    html_url: 'https://google.com',\r\n    topics: ['angular']\r\n  },\r\n  {\r\n    name: 'NgPowa',\r\n    description: 'The best frontend framework ever!',\r\n    language: 'TypeScript',\r\n    html_url: 'https://google.com',\r\n    topics: []\r\n  }\r\n];\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { URLS } from '../enums/url.enum';\r\nimport { Repo } from '../interfaces/repo.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GithubService {\r\n  URLS = URLS;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getZen(): Observable<string> {\r\n    return this.http.get(`${this.URLS.BASE}${this.URLS.ZEN}`, { responseType: 'text' });\r\n  }\r\n\r\n  getRepos(): Observable<Repo[]> {\r\n    const url: string = `${this.URLS.BASE}${this.URLS.REPOS}`;\r\n    const params = { sort: 'updated', per_page: 4 };\r\n    return this.http.get<Repo[]>(url, { params });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  ngOnInit() {\r\n    const hash: string = window.location.hash ? window.location.hash : '#home';\r\n    (document.querySelector(`a[href=\"${hash}\"]`) as HTMLLinkElement).className = 'active';\r\n  }\r\n\r\n  // TODO: Fix url hash manual input (router)\r\n  selectSection(event: Event) {\r\n    const links = document.querySelectorAll('#links>a');\r\n    links.forEach(link => link.className = '');\r\n\r\n    (event.target as HTMLLinkElement).className = 'active';\r\n  }\r\n}\r\n","<nav class=\"flex flex-between\">\r\n  <div id=\"title\" class=\"flex flex-column flex-justify-center\">\r\n    <div class=\"name\">Morad El Hamdouni</div>\r\n    <div class=\"job\">Web Developer Front</div>\r\n  </div>\r\n  <div id=\"links\" class=\"flex\">\r\n    <a href=\"#home\" (click)=\"selectSection($event)\"><i class=\"fas fa-home\"></i>Home</a>\r\n    <a href=\"#work\" (click)=\"selectSection($event)\"><i class=\"fas fa-code\"></i>Work</a>\r\n    <a href=\"#contact\" (click)=\"selectSection($event)\"><i class=\"fas fa-at\"></i>Contact</a>\r\n  </div>\r\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","AppComponent","selectors","decls","vars","consts","template","i0","BrowserModule","HttpClientModule","NavComponent","HomeComponent","WorkComponent","ContactComponent","AppModule","bootstrap","declarations","of","repos","LANGUAGES","constructor","gs","ngOnInit","repos$","getRepos","getDotColor","language","TYPESCRIPT","JAVASCRIPT","CSHARP","URLS","name","description","html_url","topics","GithubService","http","getZen","get","BASE","ZEN","responseType","url","REPOS","params","sort","per_page","factory","providedIn","hash","window","location","document","querySelector","className","selectSection","event","links","querySelectorAll","forEach","link","target","ctx","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}