{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/work/work.component.html","./src/app/components/work/work.component.ts","./src/app/enums/url.enum.ts","./src/app/services/github.service.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent { }\r\n","<app-nav></app-nav>\r\n<div class=\"flex\">\r\n  <app-home></app-home>\r\n  <app-work></app-work>\r\n  <app-contact></app-contact>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NavComponent } from './shared/nav/nav.component';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { WorkComponent } from './components/work/work.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NavComponent, HomeComponent, WorkComponent, ContactComponent],\r\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html'\r\n})\r\nexport class ContactComponent { }\r\n","<section id=\"contact\" class=\"flex flex-center vhw-100 contact-bg\">\r\n  <div>\r\n    <h1><q>Want to get in touch?</q></h1>\r\n    <div class=\"flex flex-between\">\r\n      <a href=\"https://github.com/motheblackcat\" target=\"_blank\"><i class=\"fab fa-3x fa-github\"></i></a>\r\n      <a href=\"https://www.linkedin.com/in/morad-elhamdouni/\" target=\"_blank\"><i class=\"fab fa-3x fa-linkedin\"></i></a>\r\n      <a href=\"mailto:morad.elhamdouni@gmail.com\"><i class=\"fas fa-3x fa-envelope\"></i></a>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent { }\r\n","<section id=\"home\" class=\"flex flex-center vhw-100 home-bg\">\r\n  <h1>\r\n    <q class=\"flex flex-center\">Hey there I'm Morad, a web front dev that mainly uses (but not only)\r\n      <a href=\"https://angular.io/\" class=\"angular\" target=\"_blank\"><i class=\"fab fa-angular fa-2x\"></i></a>\r\n    </q>\r\n  </h1>\r\n</section>\r\n","<section id=\"work\" class=\"flex flex-center vhw-100 work-bg\">\r\n  <div>\r\n    <h1 *ngIf=\"zen$ | async as zen; else noZen\">\r\n      <em><q>{{ zen }}</q></em> - Github Zen\r\n    </h1>\r\n    <ng-template #noZen>\r\n      <h1>\r\n        <q class=\"flex flex-center\">\r\n          The API is down or overloaded, no biggie you can just go to\r\n          <a href=\"https://github.com/motheblackcat\" target=\"_blank\"><i class=\"fab fa-2x fa-github\"></i></a>\r\n          to check my work.\r\n        </q>\r\n      </h1>\r\n    </ng-template>\r\n\r\n    <br>\r\n\r\n    <div *ngFor=\"let repo of repos$ | async\" class=\"repo-block\">\r\n      <a [href]=\"repo.html_url\" target=\"_blank\">\r\n        <p><b>{{ repo.name }}</b></p>\r\n        <p><q>{{ repo.description }}</q></p>\r\n        <p class=\"flex\">\r\n          <i [style.background-color]=\"repo.language === 'TypeScript' ? '#287dc6' : '#e16d6d'\"></i>\r\n          <em>{{ repo.language }}</em>\r\n        </p>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Observable, of } from 'rxjs';\r\nimport { Repo } from 'src/app/interfaces/repo.interface';\r\nimport { repos } from 'src/app/mocks/repos.mock';\r\nimport { GithubService } from 'src/app/services/github.service';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-work',\r\n  templateUrl: './work.component.html',\r\n  styleUrls: ['./work.component.scss']\r\n})\r\nexport class WorkComponent implements OnInit {\r\n  zen$: Observable<string> | undefined;\r\n  repos$: Observable<Repo[]> | undefined;\r\n\r\n  constructor(private gs: GithubService) { }\r\n\r\n  /** TBD: Caching system to prevent API requests overload **/\r\n  ngOnInit(): void {\r\n    this.zen$ = this.gs.getZen();\r\n    this.repos$ = this.gs.getRepos();\r\n  }\r\n}\r\n","export enum URLS {\r\n  BASE = 'https://api.github.com/',\r\n  ZEN = 'zen',\r\n  REPOS = 'users/motheblackcat/repos'\r\n}","import { Observable } from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { URLS } from '../enums/url.enum';\r\nimport { Repo } from '../interfaces/repo.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GithubService {\r\n  URLS = URLS;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getZen(): Observable<string> {\r\n    return this.http.get(`${this.URLS.BASE}${this.URLS.ZEN}`, { responseType: 'text' });\r\n  }\r\n\r\n  getRepos(): Observable<Repo[]> {\r\n    return this.http.get<Repo[]>(`${this.URLS.BASE}${this.URLS.REPOS}?sort=updated&per_page=3`);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent {\r\n  selectSection(selected: Event) {\r\n    console.log(selected);\r\n  }\r\n}\r\n","<nav class=\"flex\">\r\n  <a (click)=\"selectSection($event)\" href=\"#home\" class=\"flex flex-center\"><i class=\"fas fa-lg fa-home\"></i></a>\r\n  <a (click)=\"selectSection($event)\" href=\"#work\" class=\"flex flex-center\"><i class=\"fas fa-lg fa-code\"></i></a>\r\n  <a (click)=\"selectSection($event)\" href=\"#contact\" class=\"flex flex-center\"><i class=\"fas fa-lg fa-at\"></i></a>\r\n</nav>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","AppComponent","selectors","decls","vars","consts","template","i0","BrowserModule","HttpClientModule","NavComponent","HomeComponent","WorkComponent","ContactComponent","AppModule","bootstrap","declarations","constructor","gs","ngOnInit","zen$","getZen","repos$","getRepos","URLS","GithubService","http","get","BASE","ZEN","responseType","REPOS","factory","providedIn","selectSection","selected","console","log","ctx","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}